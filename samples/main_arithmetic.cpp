// реализация пользовательского приложения
#include <string>
#include <iostream>
#include <arithmetic.h>
#include<Windows.h>
#include <locale>
#include <conio.h>
using namespace std;


int main()
{
    // setlocale(LC_ALL, "Russian"); //не роботает
    // setlocale(LC_CTYPE, "Russian");
    // SetConsoleCP(1251);
    // SetConsoleOutputCP(1251);


    // SetConsoleCP(65001);
    SetConsoleOutputCP(65001); // для русского языка (в консоли должна стоять кодировка 65001(UTF-8))

    std::string msg = "Вычисление арифметических выражений\n\
Программа поддерживает :\n\
  1 - бинарные операнды +, -, * и унарный -\n\
  2 - числа и переменные в экспоненциальной форме записи\n\
  3 - скобки\n\n\
Введите соответсвующй номер чтобы узнать подробнее или 0 чтобы ввести арифметическое выражение\n\n";

    std::cout << msg;
    char input;
    do
    {
        std::string info;
        do
        {
            std::cout << "Введите номер : ";
            // std::cin >> input;
            input = getch();
            std::cout << input << '\n';
        } while (!(input <= '3' && input >= 0));
        switch (input)
        {
        case'1':
            info = "\n\
 - Операнды имеют приоритет\n\
 - Бинарные операнды должны находиться между числами(переменными) или скобками\n\
 - Унарный - имеет наивысший приоритет\n\
 - Перед унарным - может стоять операнд, но не число\n\n";
            break;
        case'2':
            info = "\
\nДля записи числа есть следующие правила :\n\
 - Экспоненциальная часть обозначается через Е\n\
 - Перед Е должен находиться коэффицент\n\
 - Число может содержать только . , т.е. записано в виде десятичной дроби \n\
 - В экспоненциальной части не должна пррисутствовать .\n\
 - Целое число может быть записано без Е и . \n\
 - Для записи отрицательного числа используется -\n\
 - После Е может быть записан знак + или -\n\
\nДля записи переменных есть следующие правила :\n\
 - Переменная должна состоять только из английских незаглавных букв\n\
 - Для записли переменной может использоваться несколько букв\n\
 - В момент ввода значения переменной для неё действуют те же правила что и для чисел\n\
 - Все одинаковые переменные будут иметь одинаковое значение после ввода\n\n";
            break;
        case '3':
            info = "\n\
 - Скобки меняют порядок вычисления\n\
 - Количество открывающих и закрывающих скобок должно совпадать\n\
 - После открывающей скобки и перед открывающей не может находиться бинарный операнд\n\
 - Внутри скобок должно находиться арифметическое выражение\n\n";
            break;
        }
        std::cout << info;
    } while (input != '0');

    std::cout << "\nВведите арифметическое выражение : ";
    std::string arifm;
    std::cin >> arifm;
    std::cout << "\n\n";
    try
    {
        Arithmetic ar(arifm);
        double res = ar.Calculate();
        getch();
    }
    catch (std::string ex)
    {
        std::cout << ex;
        getch();
    }
}